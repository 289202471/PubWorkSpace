<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="users">
    <!--#代表传递的对象#age代表传递的对象的age属性-->
    <insert id="insert">
      insert into users(name,age) values(#{name},#{age})
    </insert>
    <!--从#号指向的对象中取出id找到这个id对应的那一条数据，将那一条数据的age和name更新成用户输入的对象的name和age-->
    <update id="update">
        update users set name = #{name} , age = #{age} where id = #{id}
    </update>
    <delete id="delete" parameterType="int">
        delete from users where id = #{id}
    </delete>

    <!-- selectOne -->
    <!--查询语句有两个参数需要指定，一个是传入参数类型，另一个是返回参数类型,这两个类型可以像下面这样定义，也可以直接就定义为一个自己写的类-->
    <select id="selectOne" parameterType="int" resultMap="RM_User">
      select
        u.id uid ,
        u.name uname ,
        u.age uage ,
        o.id oid ,
        o.orderno oorderno
      from users u
        left outer join orders o on u.id = o.uid
      where u.id = #{id}
    </select>

    <resultMap id="RM_User" type="_User">
        <id property="id" column="uid" />
        <result property="name" column="uname" />
        <result property="age" column="uage" />
        <!-- 映射一对多关联关系 -->
        <collection property="orders" ofType="_Order">
            <id property="id" column="oid" />
            <result property="orderNo" column="oorderno" />
        </collection>
    </resultMap>

    <!-- selectAll -->
    <select id="selectAll" resultMap="RM_User">
         select
        u.id uid ,
        u.name uname ,
        u.age uage ,
        o.id oid ,
        o.orderno oorderno
      from users u
        left outer join orders o on u.id = o.uid
    </select>

    <!-- selectPage -->
    <select id="selectPage" resultType="_User">
      select
        *
      from users u limit #{offset},#{limit}
    </select>

    <!-- selectPage -->
    <select id="selectCount" resultType="int">
      select
        count(1)
      from users u
    </select>
</mapper>